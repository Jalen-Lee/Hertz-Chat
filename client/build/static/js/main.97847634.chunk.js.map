{"version":3,"sources":["components/nav-tab-item/index.tsx","store/user.store.ts","utils/token.ts","utils/request.ts","apis/auth.ts","types/dto.d.ts","store/chat.store.ts","store/auth.store.ts","store/index.ts","hooks/useStore.ts","types/common.d.ts","components/chat-layout/navigation/index.tsx","components/conversations-search/index.tsx","components/conversations-list-item/index.tsx","components/i-empty/index.tsx","components/conversations-list/index.tsx","components/contacts-list-item/index.tsx","components/contacts-list/index.tsx","components/chat-layout/sidebar/index.tsx","assets/imgs/no_data.png","assets/imgs/null_data.png","assets/imgs/no_msg.png","components/conversations-detail-message/index.tsx","components/Icon/index.tsx","components/conversation-detail-textbox/index.tsx","components/conversation-detail/index.tsx","components/contact-detail/index.tsx","components/chat-layout/main/index.tsx","views/Chat/index.tsx","views/Entrance/index.tsx","App.tsx","index.tsx"],"names":["NavTabItem","id","title","isActive","onClick","children","Tooltip","arrow","placement","className","e","userinfo","conversations","friendsList","groupsList","makeAutoObservable","this","autoBind","KEY","getToken","localStorage","getItem","setToken","token","setItem","request","axios","create","baseURL","process","timeout","whiteList","Set","interceptors","use","config","console","group","url","log","has","headers","Authorization","groupEnd","error","notification","message","description","toString","Promise","reject","response","data","success","JSON","stringify","resolve","signIn","payload","a","post","then","catch","err","signUp","checkToken","ErrorCode","socket","ws_url","REACT_APP_WS_BASE_URL","userStore","setConversations","io","autoConnect","on","onFirstLoad","auth","uid","connect","disconnect","disconnected","hasLogin","runInAction","code","err_msg","SUCCESS","chatStore","socketConnect","msg","removeItem","appName","author","version","appConfig","isRememberAccount","rememberAccount","authStore","setAppConfig","parse","initTokenFromLocal","StoreContext","createContext","rootStore","useStore","useContext","NavTabItemName","observer","tabChange","useState","CONVERSATIONS_LIST","currentTab","setCurrentTab","onNavItemClick","Avatar","src","avatar","alt","username","style","width","height","fontSize","CONTACTS_LIST","CHAT_SETTING","searchVal","setSearchValue","inputEl","useRef","type","placeholder","ref","onChange","value","target","length","current","ConversationItem","props","hasChoose","onChoose","onClose","stopPropagation","name","summary","date","IEmptyType","conversationsList","conversationChange","isShow","currentConversation","setCurrentConversation","onConversationClose","conversation","onConversationChoose","classNames","map","i","prop","info","onSelect","icon","accordionSx","backgroundColor","color","border","boxShadow","margin","borderRadius","onContactChange","useEffect","Accordion","sx","AccordionSummary","expandIcon","Typography","AccordionDetails","padding","images","NO_DATA","NoDataImg","NULL_DATA","NullDataImg","NO_MSG","NoMsgImg","IEmpty","custom","image","imageStyle","TextContent","content","MessageBody","dayjs","extend","relativeTime","locale","ConversationsDetailMessage","chat_type","msg_type","sender","post_date","shape","size","draggable","fromNow","createFromIconfontCN","scriptUrl","OptionButton","Icon","EditArea","submit","inputRef","setContent","contentEditable","onCompositionEnd","innerText","onInput","nativeEvent","isComposing","onKeyDown","key","ctrlKey","preventDefault","innerHTML","o","lastChild","sel","window","getSelection","range","document","createRange","selectNodeContents","collapse","setEndAfter","setStartAfter","removeAllRanges","addRange","scrollTop","scrollHeight","onKeyUp","suppressContentEditableWarning","ConversationDetailTextBox","onSubmit","msgList","Date","ConversationDetail","detail","messages","setMessages","scrollerRef","scrollerEl","KeyboardVoice","Videocam","val","now","Math","random","FriendDetail","letterSpacing","GroupDetail","wrapper","el","contact","Chat","setContact","Grid","container","wrap","item","tabId","xs","LoginForm","account","setAccount","password","setPassword","remember","setRemember","signInAsync","TextField","label","FormControlLabel","control","Checkbox","checked","Button","variant","RegisterForm","setUsername","repeatPassword","setRepeatPassword","signUpAsync","ForgetPasswordForm","Entrance","mode","setMode","forms","GlobalContext","appInit","socketInit","checkTokenAsync","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.97847634.chunk.js","sourcesContent":["import React from 'react'\nimport { Tooltip } from '@mui/material'\nimport './index.scss'\nimport { NavTabItemName } from '../../types/common.d'\n\ninterface Prop {\n  id: NavTabItemName,\n  title: string,\n  isActive: boolean,\n  onClick: (e: React.MouseEvent<HTMLDivElement>, id: NavTabItemName) => void,\n  children: JSX.Element\n}\n\n\nexport default function NavTabItem({\n  id, title, isActive, onClick, children\n}: Prop): JSX.Element {\n  return (\n\n    <Tooltip title={title} arrow placement='left'>\n      <div\n        id={id}\n        className={isActive ? 'nav-tab-item active' : 'nav-tab-item'}\n        onClick={\n          (e) => onClick(e, id)\n        }\n      >\n        {children}\n      </div>\n    </Tooltip>\n  )\n}\n","import { makeAutoObservable } from 'mobx'\n\nclass UserStore{\n\n  // 用户信息\n  userinfo:any\n\n  // 会话列表\n  conversations:any[] = []\n\n  // 好友列表\n  friendsList: any[] = []\n  // 群聊列表\n  groupsList: any[] = []\n\n\n  constructor() {\n    makeAutoObservable(this,{},{\n      autoBind:true\n    })\n  }\n\n  setConversations(conversations:any[]){\n    this.conversations = conversations\n  }\n\n  setFriendsList(friendsList:any[]){\n    this.friendsList = friendsList\n  }\n\n  setGroupsList(groupsList:any[]){\n    this.groupsList = groupsList\n  }\n}\n\nexport default new UserStore()\n","\nconst KEY = 'hertz_token'\n\nexport function getToken(){\n  return localStorage.getItem(KEY) || ''\n}\n\nexport function setToken(token:string){\n  localStorage.setItem(KEY,token)\n}\n\nexport function removeToken(){\n  localStorage.removeItem(KEY)\n}\n","import axios from 'axios'\nimport { notification } from 'antd'\nimport { getToken } from './token'\n\n\n\nconst baseURL = process.env.REACT_APP_BASE_URL\nconst request = axios.create({\n  baseURL,\n  timeout: 3000\n})\n\n// token白名单\nconst whiteList = new Set([\n  '/auth/login',\n  '/auth/signup',\n  '/auth/checkToken'\n])\n\n// 请求异常拦截器\nconst reqErrorHandler = (error:any) => {\n  console.group('http请求错误，未发出')\n  console.log(error)\n  notification.error({\n    message: `请求错误`,\n    description: error.toString(),\n  });\n  console.groupEnd()\n  return Promise.reject(error)\n};\n\n// 响应异常拦截器\nconst resErrorHandler = (error:any) => {\n  console.group('http响应错误')\n  console.log('响应体',error.response)\n  console.log('错误体',error)\n  console.groupEnd()\n  notification.error({\n    message: `响应错误`,\n    description: error.toString(),\n  });\n  // switch (status) {\n  //   case 400: error.message = '请求错误'; break;\n  //   case 401: error.message = '未授权，请登录'; break;\n  //   case 403: error.message = '拒绝访问'; break;\n  //   case 404: error.message = `请求地址出错: ${error.response.config.url}`; break;\n  //   case 408: error.message = '请求超时'; break;\n  //   case 500: error.message = '服务器内部错误'; break;\n  //   case 501: error.message = '服务未实现'; break;\n  //   case 502: error.message = '网关错误'; break;\n  //   case 503: error.message = '服务不可用'; break;\n  //   case 504: error.message = '网关超时'; break;\n  //   case 505: error.message = 'HTTP版本不受支持'; break;\n  //   default: break;\n  // }\n  return Promise.reject(error)\n};\n\n//请求拦截器\nrequest.interceptors.request.use(config=>{\n  console.group(`http请求:${config.url!}`)\n  console.log('请求config',config)\n  if(config.url && !whiteList.has(config.url)){\n    const token = getToken()\n    config.headers!.Authorization = `Bearer ${token}`;\n    console.log('携带token',token)\n  }else {\n    console.log('不携带token')\n  }\n  console.groupEnd()\n  return config\n},reqErrorHandler)\n\n//响应拦截器\nrequest.interceptors.response.use(response =>{\n  console.group(`http响应:${response.config.url}`)\n  console.log('响应体',response)\n  console.log('数据',response.data)\n  console.groupEnd()\n  notification.success({\n    message:'响应返回',\n    description:JSON.stringify(response.data,null,'\\n')\n  })\n  return Promise.resolve(response.data)\n},resErrorHandler)\n\nexport default request\n","import request from '../utils/request'\nimport {\n  LoginBodyDto,\n  LoginResponseDto,\n  RegisterBodyDto,\n  RegisterResponseDto,\n  CheckTokenBodyDto,\n  CheckTokenResponseDto\n} from '../types/dto'\n\n// 登录\nexport async function signIn(payload:any):Promise<any>{\n  return new Promise((resolve, reject) => {\n    request.post<any>('/auth/login',payload)\n      .then(data=>{\n        resolve(data)\n      })\n      .catch(err=>{\n        reject(err)\n      })\n  })\n}\n\n// 注册\nexport async function signUp(payload:any):Promise<any>{\n  return new Promise((resolve, reject) => {\n    request.post<any>('/auth/signup',payload)\n      .then(data=>{\n        resolve(data)\n      })\n      .catch(err=>{\n        reject(err)\n      })\n  })\n}\n\nexport function checkToken(payload:any):Promise<any>{\n  return new Promise((resolve, reject) => {\n    request.post<any>('/auth/checkToken',payload)\n      .then(data=>{\n        resolve(data)\n      })\n      .catch(err=>{\n        reject(err)\n      })\n  })\n}\n","export enum ErrorCode {\n  // 成功\n  SUCCESS = 0,\n  // 未知错误\n  UNKNOWN_ERROR = 1,\n  // 服务暂不可用\n  SERVICE_TEMPORARILY_UNAVAILABLE = 3,\n  // 请求参数无效\n  INVALID_PARAMETER = 100,\n  // api key无效\n  INVALID_API_KEY = 101,\n  // 无效的用户资料字段名\n  INVALID_USER_INFO_FIELD = 109,\n  // 无效的access token\n  ACCESS_TOKEN_INVALID_OR_NO_LONGER_VALID = 110,\n  // access token过期\n  ACCESS_TOKEN_EXPIRED = 111,\n  // 用户认证失败\n  INVALID_CLIENT = 10001,\n}\n\nexport type LoginBodyDto = {\n  // 用户名\n  username: string\n  // 密码\n  password: string\n}\n\nexport type LoginResponseDto = {\n  // 错误码\n  code: ErrorCode\n  // 响应信息\n  msg: string\n  // 用户id\n  uid?: string\n  // 用户信息\n  userInfo?: any\n  // 登录成功之后返回的token信息\n  token?: string\n  // token过期时间\n  tokenExpired?: string\n}\n\n\nexport type RegisterBodyDto = {\n  // 用户名\n  username: string\n  // 密码\n  password: string\n  // 邀请码\n  invitationCode?: string\n}\n\nexport type RegisterResponseDto = {\n  // 错误码\n  code: ErrorCode\n  // 响应信息\n  msg: string\n  // 用户id\n  uid?: string\n  // 用户信息\n  userInfo?: any\n  // 注册完成自动登录之后返回的token信息\n  token?: string\n  // token过期时间\n  tokenExpired?: string\n}\n\nexport type CheckTokenBodyDto = {\n  readonly token: string\n}\n\nexport type CheckTokenResponseDto = {\n  // 错误码\n  readonly code: ErrorCode\n  // 响应信息\n  readonly msg: string\n  // 用户Id\n  readonly uid?: string\n  // 用户信息\n  readonly userInfo?: any\n  // token\n  readonly token?: string\n  // token过期时间\n  readonly tokenExpired?: Date\n}\n","import { makeAutoObservable } from 'mobx'\nimport { io, Socket } from 'socket.io-client'\nimport userStore from './user.store'\n\n\n\nclass ChatStore {\n\n  socket: Socket | undefined\n\n  ws_url:string = process.env.REACT_APP_WS_BASE_URL as string\n\n  constructor() {\n    makeAutoObservable(this, {}, {\n      autoBind: true,\n    })\n  }\n\n  private onFirstLoad(payload:any){\n    console.group('ws:server.first-load')\n    console.log('payload',payload)\n    userStore.setConversations(payload.conversations)\n    console.groupEnd()\n  }\n\n  socketInit() {\n    this.socket = io( this.ws_url, { autoConnect: false })\n    this.socket.on('connect',()=>{\n      console.log('socket 已连接')\n    })\n\n    this.socket.on('server.first-load',this.onFirstLoad)\n\n\n  }\n\n  socketConnect(){\n    this.socket!.auth = { uid: userStore.userinfo.uid};\n    this.socket?.connect()\n  }\n\n  socketDisconnect(){\n    this.socket?.disconnect()\n  }\n\n  get isSocketConnected(){\n    return this.socket?.disconnected\n  }\n}\n\nexport default new ChatStore()\n","import { makeAutoObservable, runInAction } from 'mobx'\nimport {\n  checkToken, signIn, signUp,\n} from '../apis/auth'\nimport { message } from 'antd';\nimport { ErrorCode, LoginBodyDto, RegisterBodyDto } from '../types/dto.d'\nimport userStore from './user.store'\nimport chatStore from './chat.store'\nimport { removeToken, setToken } from '../utils/token'\n\nclass AuthStore {\n\n  token = ''\n  hasLogin = false\n\n  initTokenFromLocal(token:string){\n    this.token = token\n  }\n\n  constructor() {\n    makeAutoObservable(this, {}, {\n      autoBind: true,\n    })\n  }\n\n\n  signInAsync(payload:any) {\n      runInAction(async () => {\n        try {\n          const {code,data,err_msg} = await signIn(payload)\n          if (code === ErrorCode.SUCCESS) {\n            userStore.userinfo = data.userinfo\n            this.token = data.token!\n            setToken(data.token!)\n            message.success('登录成功!')\n            chatStore.socketConnect()\n            this.hasLogin = true\n          } else {\n            message.success(`登录失败，${data.msg}`)\n          }\n        }catch (err:any){\n          message.error(`登录失败，${err.message}`)\n        }\n      })\n  }\n\n  signUpAsync(payload:any) {\n    runInAction(async () => {\n      try {\n        const {code,data,err_msg} = await signUp(payload)\n        if (code === ErrorCode.SUCCESS) {\n          this.token = data.data.token!\n          setToken(data.token!)\n          userStore.userinfo = data.userinfo\n          message.success(`账号注册成功！`)\n          chatStore.socketConnect()\n          this.hasLogin = true\n        } else {\n          message.error(`账号注册失败！，${data.msg}`)\n        }\n      }catch (err:any){\n        message.error(`账号注册失败，${err.message}`)\n      }\n    })\n  }\n\n  checkTokenAsync() {\n    try {\n      runInAction(async () => {\n        const { code,data,err_msg } = await checkToken({ token: this.token })\n        if (code === ErrorCode.SUCCESS) {\n          userStore.userinfo = data.userinfo\n          message.success('欢迎再次登录！')\n          chatStore.socketConnect()\n          this.hasLogin = true\n        } else {\n          this.token = ''\n          removeToken()\n          message.error(`身份信息已失效，请重新登录`)\n        }\n      })\n    } catch (err:any) {\n      message.error(`token校验失败，${err.message}`)\n    }\n  }\n\n  logOutAsync() {\n\n  }\n\n}\n\nexport default new AuthStore()\n","import { makeAutoObservable } from 'mobx'\nimport userStore from './user.store'\nimport authStore from './auth.store'\nimport chatStore from './chat.store'\nimport {getToken} from '../utils/token'\n\nclass RootStore {\n\n  appName = 'Hertz Chat'\n  author = 'Jaylen Lee'\n  version = '1.0.0'\n\n  appConfig={\n    isRememberAccount:false,\n    rememberAccount:''\n  }\n\n  userStore = userStore\n  authStore = authStore\n  chatStore = chatStore\n\n  constructor() {\n    makeAutoObservable(this, {\n      userStore: false,\n      authStore: false,\n      chatStore: false\n    }, {\n      autoBind: true,\n    })\n  }\n\n  setAppConfig(config:any){\n    this.appConfig = config\n  }\n\n  appInit(){\n    console.log('appInit')\n    this.setAppConfig(JSON.parse(localStorage.getItem('hertz_config')||'{}'))\n    console.log(this.appConfig)\n    const token = getToken()\n    this.authStore.initTokenFromLocal(token)\n  }\n\n}\n\n\nexport default new RootStore()\n","import rootStore from '../store'\nimport { createContext, useContext } from 'react'\n\nexport const StoreContext = createContext(rootStore)\n\nexport default function useStore(){\n  return useContext(StoreContext)\n}\n","export enum NavTabItemName {\n  CONVERSATIONS_LIST = 'conversations-list',\n  CONTACTS_LIST = 'contacts-list',\n  CHAT_SETTING = 'chat-setting'\n}\n","import React, { useState } from 'react'\nimport { observer } from 'mobx-react-lite'\nimport Avatar from '@mui/material/Avatar'\nimport NavTabItem from '../../nav-tab-item'\nimport ChatIcon from '@mui/icons-material/Chat'\nimport PeopleIcon from '@mui/icons-material/People'\nimport SettingsIcon from '@mui/icons-material/Settings'\nimport useStore from '../../../hooks/useStore'\nimport './index.scss'\nimport { NavTabItemName } from '../../../types/common.d'\n\ninterface Prop {\n  tabChange:(tabId:NavTabItemName)=>void\n}\n\nexport default observer(function({ tabChange }:Prop){\n\n  const [currentTab,setCurrentTab] = useState<NavTabItemName>(NavTabItemName.CONVERSATIONS_LIST)\n\n  const {userStore} = useStore()\n\n  function onNavItemClick(e:React.MouseEvent<HTMLDivElement>,id:NavTabItemName){\n    console.log(\"点击navTabItem\",id)\n    setCurrentTab(id)\n    tabChange(id)\n  }\n\n  return (\n    <nav className='chat-layout-navigation-container'>\n      <div className='profile'>\n        <Avatar\n          src={userStore.userinfo && userStore.userinfo.avatar}\n          alt={userStore.userinfo && userStore.userinfo.username}\n          style={{\n            width:'50px',height:'50px'\n          }}/>\n      </div>\n      <div className='tabs-list'>\n        <div className='row-1'>\n          <NavTabItem id={NavTabItemName.CONVERSATIONS_LIST} title='会话列表' onClick={onNavItemClick} isActive={currentTab === NavTabItemName.CONVERSATIONS_LIST}>\n            <ChatIcon fontSize={'large'}/>\n          </NavTabItem>\n          <NavTabItem id={NavTabItemName.CONTACTS_LIST} title='好友列表' onClick={onNavItemClick} isActive={currentTab === NavTabItemName.CONTACTS_LIST}>\n            <PeopleIcon fontSize={'large'}/>\n          </NavTabItem>\n        </div>\n        <div className='row-2'>\n          <NavTabItem id={NavTabItemName.CHAT_SETTING} title='设置' onClick={onNavItemClick} isActive={currentTab === NavTabItemName.CHAT_SETTING}>\n            <SettingsIcon fontSize={'large'}/>\n          </NavTabItem>\n        </div>\n      </div>\n    </nav>\n  )\n})\n\n","import React, { useRef, useState } from 'react'\nimport { observer } from 'mobx-react-lite'\nimport SearchIcon from '@mui/icons-material/Search'\nimport CancelIcon from '@mui/icons-material/Cancel'\nimport './index.scss'\n\nexport default observer(function ConversationSearchBar() {\n\n  const [searchVal, setSearchValue] = useState('0')\n  const inputEl = useRef(null);\n\n\n  function onChange(e: React.ChangeEvent<HTMLInputElement>) {\n    let value = e.target.value\n    setSearchValue(value)\n    // console.log(value)\n  }\n\n  function onClear(e: React.MouseEvent<HTMLDivElement>) {\n    const el = inputEl.current as any\n    el.value = ''\n    setSearchValue('')\n  }\n\n  return (\n    <div className='conversation-search-container'>\n      <div className='search-icon icon'>\n        <SearchIcon />\n      </div>\n      <input\n        type='text'\n        className='input-area'\n        placeholder='搜索'\n        ref={inputEl}\n        onChange={(e) => onChange(e)}\n      />\n      <div className={`clear-icon icon ${searchVal.length > 0 && 'show'}`} onClick={(e) => onClear(e)}>\n        <CancelIcon fontSize={'small'}/>\n      </div>\n    </div>\n  )\n})\n","import React from 'react'\nimport CloseIcon from '@mui/icons-material/Close';\nimport Badge from '@mui/material/Badge';\nimport './index.scss'\n\n\ninterface ConversationItemProps {\n  data:any,\n  onChoose:(e: React.MouseEvent<HTMLDivElement>,conversation:any)=>void,\n  onClose: (e: React.MouseEvent<HTMLDivElement>,conversation:any)=>void,\n  hasChoose:boolean | undefined\n}\n\n\n\nexport default function ConversationItem(props:ConversationItemProps):JSX.Element{\n  const {data,hasChoose,onChoose,onClose} = props\n  return (\n    <div className={hasChoose?'conversation-item-container chosen':'conversation-item-container'} onClick={(e)=>onChoose(e,data)}>\n      <div className='close-btn' onClick={(e)=>{\n        e.stopPropagation()\n        onClose(e,data)\n      }}>\n        <CloseIcon fontSize={'small'}/>\n      </div>\n      <div className='conversation-item-body'>\n        <div className='conversation-item-body-avatar'>\n          <img src={data.avatar} alt={data.name + '头像'} />\n        </div>\n        <div className='conversation-item-body-content'>\n          <div className='row-1'>\n            <div className='name text-ellipsis'>\n              {data.name}\n            </div>\n            <div className='unread-count'>\n            </div>\n          </div>\n          <div className='row-2'>\n            <div className='summary text-ellipsis'>\n              {data.summary}\n            </div>\n            <div className='date'>\n              {data.date}\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </div>\n  )\n}\n","import React from 'react'\nimport { Empty, EmptyProps } from 'antd'\nimport './index.scss'\n\nimport NoDataImg from '../../assets/imgs/no_data.png'\nimport NullDataImg from '../../assets/imgs/null_data.png'\nimport NoMsgImg from '../../assets/imgs/no_msg.png'\n\nexport enum IEmptyType{\n  NO_DATA = 'no-data',\n  NULL_DATA = 'null-data',\n  NO_MSG = 'no-msg'\n}\n\nexport interface IEmptyProps extends EmptyProps {\n  type?: IEmptyType\n  custom?: boolean\n  children?: React.ReactNode\n}\n\nconst images = {\n  [IEmptyType.NO_DATA]:NoDataImg,\n  [IEmptyType.NULL_DATA]:NullDataImg,\n  [IEmptyType.NO_MSG]:NoMsgImg\n}\n\n\n\nexport default function IEmpty(props:IEmptyProps){\n  if(props.custom){\n    return (\n      <div className='empty-wrap'>\n        {props.children}\n      </div>\n    )\n  }else{\n    let {type,image,imageStyle,description} = props\n    imageStyle = imageStyle || {\n      height: '50%',\n    }\n    description = description || false\n    if(!type && !image){\n      type = IEmptyType.NO_DATA\n      image = images[type]\n    }else if((type && !image) || (type && image)){\n      image = images[type]\n    }else{\n      imageStyle = {\n        height: 'auto',\n      }\n    }\n    return (\n      <div className='empty-wrap'>\n        <Empty\n          image={image}\n          imageStyle={imageStyle}\n          description={description}\n        />\n      </div>\n    )\n  }\n}\n","import React, { useState } from 'react'\nimport { observer } from 'mobx-react-lite'\nimport './index.scss'\nimport SearchBar from '../conversations-search'\nimport AddBoxIcon from '@mui/icons-material/AddBox'\nimport ConversationItem from '../conversations-list-item'\nimport classNames from 'classnames'\n\n\ninterface Conversation {\n  name:string,\n  avatar:string,\n  summary:string,\n  date:string\n}\n\nconst conversationsList = [\n  {\n    name: 'David',\n    avatar: 'https://picsum.photos/id/409/200/200',\n    summary: '中国陆军一个炮兵旅大概36门履带155榴和36门轮式155榴，36门300毫米火箭炮（12管）',\n    date: '2022-1-27',\n  },\n  {\n    name: 'Jaylenl',\n    avatar: 'https://picsum.photos/id/409/200/200',\n    summary: '中国陆军一个炮兵旅大概36门履带155榴和36门轮式155榴，36门300毫米火箭炮（12管）',\n    date: '2022-1-27',\n  },\n]\n\ninterface Prop{\n  conversationChange:any\n  isShow:boolean\n}\n\nexport default observer(function({conversationChange,isShow}:Prop){\n\n\n  const [currentConversation,setCurrentConversation] = useState<Conversation>()\n\n  function onConversationClose(e: React.MouseEvent<HTMLDivElement>, conversation: any) {\n    console.log('从会话列表中删除会话', conversation)\n  }\n\n  function onConversationChoose(e:React.MouseEvent<HTMLDivElement>,conversation:any){\n    console.log(\"选择会话\",conversation)\n    setCurrentConversation(conversation)\n    conversationChange(conversation)\n  }\n\n  return (\n    <div className={classNames('conversation-list-container',{'invisible':!isShow})}>\n      <div className='header'>\n        <div className='search-bar'>\n          <SearchBar />\n        </div>\n        <div className='join-btn'>\n          <AddBoxIcon fontSize={'medium'} />\n        </div>\n      </div>\n      <div className='conversations-scroll-list'>\n        {\n          conversationsList.map(i => {\n            return (\n              <ConversationItem\n                data={i}\n                key={i.name}\n                onChoose={onConversationChoose}\n                onClose={onConversationClose}\n                hasChoose={currentConversation && i.name === currentConversation.name}\n              />\n            )\n          })\n        }\n      </div>\n    </div>\n  )\n})\n","import React from 'react'\nimport { observer } from 'mobx-react-lite'\nimport './index.scss'\n\n\n\nexport default observer(function(prop: {\n  info:any,\n  onSelect:(contact:any)=>void\n}) {\n  const {info,onSelect} = prop\n  console.log(onSelect)\n  return (\n    <div className='contacts-item' onClick={()=>onSelect(info)}>\n      <div className='avatar'>\n        <img src={info.icon} alt={info.name} />\n      </div>\n      <div className='name'>{info.name}</div>\n    </div>\n  )\n})\n","import React, { useEffect } from 'react'\nimport { observer } from 'mobx-react-lite'\nimport './index.scss'\nimport classNames from 'classnames'\n\nimport ContactsItem from '../contacts-list-item'\n\n\nimport Accordion from '@mui/material/Accordion'\nimport AccordionSummary from '@mui/material/AccordionSummary'\nimport AccordionDetails from '@mui/material/AccordionDetails'\nimport Typography from '@mui/material/Typography'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport useStore from '../../hooks/useStore'\n\n\nconst accordionSx = {\n  backgroundColor: 'transparent',\n  color: '#ffffff',\n  border: 'none',\n  boxShadow: 'none',\n  '&.Mui-expanded': {\n    margin: 0,\n  },\n  '&:first-of-type': {\n    borderRadius: 0,\n    border: 'none',\n  },\n  '&:last-of-type': {\n    borderRadius: 0,\n    border: 'none',\n  },\n}\n\ninterface Props{\n  isShow:boolean,\n  onContactChange:(contact:any)=>void\n}\n\nexport default observer(function({ isShow,onContactChange }:Props) {\n\n  console.log(onContactChange)\n  const {userStore} = useStore()\n  console.log('userStore',userStore)\n  const {conversations} = userStore\n  useEffect(()=>{\n\n  },[])\n\n  return (\n    <div className={classNames('friend-list-container',{'invisible':!isShow})}>\n      <Accordion sx={accordionSx}>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon sx={{ color: '#ffffff' }} />}\n          id='panel1a-header'\n        >\n          <Typography>我的好友</Typography>\n        </AccordionSummary>\n        <AccordionDetails sx={{ padding:0}}>\n        </AccordionDetails>\n      </Accordion>\n      <Accordion sx={accordionSx}>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon sx={{ color: '#ffffff' }} />}\n          id='panel2a-header'\n        >\n          <Typography>我的群聊</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          {\n            conversations.map(i=>(\n              <ContactsItem info={i} onSelect={onContactChange} key={i.id}/>\n            ))\n          }\n        </AccordionDetails>\n      </Accordion>\n    </div>\n  )\n})\n","import React, { useState } from 'react'\nimport { observer } from 'mobx-react-lite'\nimport ConversationList from '../../conversations-list'\nimport ContactsList from '../../contacts-list'\nimport {NavTabItemName} from '../../../types/common.d'\n\n\nimport './index.scss'\n\ninterface Prop {\n  currentTab:NavTabItemName,\n  conversationChange:(conversation:any)=>void,\n  onContactChange:(contact:any)=>void\n}\n\n\nexport default observer(function({\n  currentTab, conversationChange,onContactChange\n}:Prop) {\n\n\n  return (\n    <aside className='chat-layout-sidebar-container'>\n      <ConversationList\n        conversationChange={conversationChange}\n        isShow={currentTab === NavTabItemName.CONVERSATIONS_LIST}\n      />\n      <ContactsList\n        onContactChange={onContactChange}\n        isShow={currentTab === NavTabItemName.CONTACTS_LIST}\n      />\n    </aside>\n  )\n})\n","export default __webpack_public_path__ + \"static/media/no_data.c81309d3.png\";","export default __webpack_public_path__ + \"static/media/null_data.8a9160f0.png\";","export default __webpack_public_path__ + \"static/media/no_msg.1768ddfb.png\";","import React from \"react\";\nimport { Avatar } from 'antd'\nimport MyAvatar from \"../../assets/avatar.jpeg\";\nimport './index.scss'\nimport classNames from 'classnames'\n\nimport dayjs from 'dayjs'\nimport relativeTime from 'dayjs/plugin/relativeTime'\nimport 'dayjs/locale/zh-cn'\n\ndayjs.extend(relativeTime)\ndayjs.locale('zh-cn')\n\n\nfunction TextContent({content}:any){\n  return <span className='message-body-text'>{content}</span>\n}\n\nfunction FileContent(){\n  return <div></div>\n}\n\nfunction ImageContent(){\n  return <div></div>\n}\n\nfunction VideoContent(){\n  return <div></div>\n}\n\nfunction MessageBody(props:any){\n  return (\n    <div className='message-body'>\n      <TextContent content={props.content}/>\n    </div>\n  )\n}\n\nconst myId = '666'\n\nexport default function ConversationsDetailMessage(props:any){\n  const {\n    id,chat_type,msg_type,content,sender,post_date\n  } = props.data\n\n\n  return (\n    <div className={'conversation-detail-message'}>\n      <div className={classNames('message-wrap ',sender.uid === myId?'self':'opposite')}>\n        <div className={'message-sender'}>\n          <Avatar\n            src={sender.avatar}\n            shape={'square'}\n            size={50}\n            draggable={false}\n          />\n        </div>\n        <div className={'message-content'}>\n          <div className={classNames('message-content-header',{'invisible': chat_type === 'private'})}>\n            jaylenl\n          </div>\n          <div className={'message-content-main'}>\n            <MessageBody content={content}/>\n          </div>\n          <div className={'message-content-post-time'}>\n            <span>{dayjs().fromNow(post_date)}</span>\n          </div>\n        </div>\n        <div className={'message-status'}>\n        </div>\n      </div>\n\n    </div>\n  )\n}\n","import { createFromIconfontCN } from '@ant-design/icons'\n\nexport default createFromIconfontCN({\n  scriptUrl: '//at.alicdn.com/t/font_2877981_u38umvog3lm.js', // 在 iconfont.cn 上生成\n})\n","import React, {MouseEventHandler, useRef, useState, useEffect} from \"react\";\nimport {Tooltip, Popover,message} from 'antd';\nimport Button from '@mui/material/Button';\n\n\nimport './index.scss'\nimport Icon from \"../Icon\";\n\nimport 'emoji-mart/css/emoji-mart.css'\nimport {Picker} from 'emoji-mart'\n\ninterface OptionButtonProp {\n  title: string,\n  icon: string,\n  onClick?: MouseEventHandler,\n  onFocus?: MouseEventHandler,\n  onMouseLeave?: MouseEventHandler,\n  onMouseEnter?: MouseEventHandler\n}\n\nconst OptionButton = function (props: OptionButtonProp) {\n  const {title, icon, onClick} = props\n  return (\n    <Tooltip title={title}>\n      <div className='input-bar-option-btn' onClick={onClick}>\n        <Icon type={icon} style={{fontSize: '24px'}}/>\n      </div>\n    </Tooltip>\n  )\n}\n\n\nfunction EditArea({ submit }: {\n  submit:(val:string)=>void\n}) {\n  console.log('EditArea渲染')\n  const inputRef = useRef<HTMLPreElement>(null)\n  const [content, setContent] = useState('')\n\n  const onInput: React.FormEventHandler<HTMLPreElement> = function (e) {\n    const {current} = inputRef\n    let nativeEvent = e.nativeEvent as InputEvent\n    if (!current || nativeEvent.isComposing) return\n    console.log('单词输入中')\n    setContent(current.innerText)\n  }\n\n  const onCompositionEnd: React.CompositionEventHandler<HTMLPreElement> =\n    function (e) {\n      const {current} = inputRef\n      console.log('汉字输入')\n      current && setContent(current.innerText)\n    }\n\n  const onKeyDown: React.KeyboardEventHandler<HTMLPreElement> = function (e) {\n    // console.log('键盘按下', e)\n    let {key, ctrlKey} = e\n    const {current} = inputRef\n    if (!current) return\n    switch (key) {\n      case 'Enter':\n        e.preventDefault()\n        if (!ctrlKey) {\n          if(current.innerText!=='\\n'){\n            submit(current.innerText)\n            current.innerHTML = '<div><br/></div>'\n          }\n        } else {\n          console.log('换行')\n          current.innerHTML += '<div><br/></div>'\n          let o = current.lastChild\n          let sel = window.getSelection()\n          let range = document.createRange()\n          range.selectNodeContents(current)\n          range.collapse(false)\n          range.setEndAfter(o as Node)\n          range.setStartAfter(o as Node)\n          sel?.removeAllRanges()\n          sel?.addRange(range)\n          current.scrollTop = current.scrollHeight\n        }\n        break\n      default:\n        break\n    }\n  }\n\n  const onKeyUp: React.KeyboardEventHandler<HTMLPreElement> = function (e) {\n    let {key, ctrlKey} = e\n  }\n\n  return (\n    <pre\n      id='editArea'\n      contentEditable='true'\n      onCompositionEnd={onCompositionEnd}\n      onInput={onInput}\n      onKeyDown={onKeyDown}\n      onKeyUp={onKeyUp}\n      ref={inputRef}\n      suppressContentEditableWarning\n    >\n        <div>\n          <br/>\n        </div>\n    </pre>\n  )\n}\n\nexport default function ConversationDetailTextBox(props:{\n  onSubmit?:(val:string)=>void\n}) {\n  const {onSubmit} = props\n  console.log('textbox渲染')\n  function sendFile() {\n    message.info('功能正在开发中~')\n    console.log(\"发送文件\")\n  }\n\n  function sendImage() {\n    message.info('功能正在开发中~')\n    console.log(\"发送图片\")\n  }\n\n  function sendEmoji() {\n    message.info('功能正在开发中~')\n    console.log('发送表情')\n  }\n\n  return (\n    <div className={'conversation-detail-textbox'}>\n      <div className={'input-bar-header'}>\n        <div className='input-bar-header-left'>\n          {/*<Popover content={<Picker set='apple'/>} trigger='click'>*/}\n          {/*  <div>*/}\n              <OptionButton title=\"发表情\" icon='icon-xiaolian' onClick={sendEmoji}/>\n          {/*  </div>*/}\n          {/*</Popover>*/}\n          <OptionButton title=\"发图片\" icon='icon-tupian' onClick={sendImage}/>\n          <OptionButton title=\"发文件\" icon='icon-file' onClick={sendFile}/>\n        </div>\n        <div className='input-bar-header-right'></div>\n      </div>\n\n      <div className={'input-bar-main'}>\n        <EditArea submit={onSubmit!}/>\n      </div>\n      {/*<div className={'input-bar-footer'}>*/}\n      {/*  <Button variant=\"contained\">发送</Button>*/}\n      {/*</div>*/}\n    </div>\n  )\n}\n","import React, { useEffect, useRef, useState } from 'react'\nimport { observer } from 'mobx-react-lite'\nimport './index.scss'\nimport {\n  KeyboardVoice as KeyboardVoiceIcon,\n  Videocam as VideocamIcon\n} from '@mui/icons-material'\nimport Message from '../conversations-detail-message'\nimport TextBox from '../conversation-detail-textbox'\n\nconst message1 = {\n  from: 'opposite',\n  type: 'text',\n  content: '自动调整字符大小\\n' +\n    '对于字符型的头像，当字符串较长时，字体大小可以根据头像宽度自动调整。也可使用 gap 来设置字符距离左右两侧边界单位像素。',\n}\nconst message2 = {\n  from: 'self',\n  type: 'text',\n  content: '自动调整字符大小\\n' +\n    '对于字符型的头像，当字符串较长时，字体大小可以根据头像宽度自动调整。也可使用 gap 来设置字符距离左右两侧边界单位像素。',\n}\n\nconst msgList = [\n  {\n    id:'001',\n    chat_type:'private',\n    msg_type:'text',\n    content:'对于字符型的头像，当字符串较长时，字体大小可以根据头像宽度自动调整。也可使用 gap 来设置字符距离左右两侧边界单位像素。',\n    sender:{\n      uid:'001',\n      name:'david',\n      avatar:'https://pic2.zhimg.com/v2-e8240d5f2e9a3935d0b74f0c4d1e8c43_im.jpg'\n    },\n    post_date: new Date()\n  },\n  {\n    id:'002',\n    chat_type:'private',\n    msg_type:'text',\n    content:'对于字符型的头像，当字符串较长时，字体大小可以根据头像宽度自动调整。也可使用 gap 来设置字符距离左右两侧边界单位像素。',\n    sender:{\n      uid:'002',\n      name:'mike',\n      avatar:'https://pic2.zhimg.com/v2-e8240d5f2e9a3935d0b74f0c4d1e8c43_im.jpg'\n    },\n    post_date: new Date()\n  },\n  {\n    id:'003',\n    chat_type:'private',\n    msg_type:'text',\n    content:'对于字符型的头像，当字符串较长时，字体大小可以根据头像宽度自动调整。也可使用 gap 来设置字符距离左右两侧边界单位像素。',\n    sender:{\n      uid:'003',\n      name:'john',\n      avatar:'https://pic2.zhimg.com/v2-e8240d5f2e9a3935d0b74f0c4d1e8c43_im.jpg'\n    },\n    post_date: new Date()\n  }\n]\n\ninterface ConversationDetailProps{\n  detail:any\n  children?:React.ReactNode\n}\n\n\nconst ConversationDetail = observer(function ({ detail }:ConversationDetailProps){\n  const {name,avatar} = detail\n\n  const [messages,setMessages] = useState<any[]>(msgList)\n\n  const scrollerRef = useRef<HTMLDivElement>(null)\n\n  const handleSubmit = function(val:string){\n    if(val.length === 0) return\n    console.log('发送消息',val,val.length)\n    setMessages([\n      ...messages,\n      {\n        id: Date.now().toString(),\n        chat_type:(Math.random()*10)>5?'private':'group',\n        msg_type:'text',\n        content: val,\n        sender:{\n          uid:(Math.random()*10)>5?'666':Date.now().toString(),\n          name:'jaylenl',\n          avatar:avatar\n        },\n        post_date: new Date()\n      }\n    ])\n  }\n\n  useEffect(()=>{\n    const {current:scrollerEl} = scrollerRef\n    if(scrollerEl){\n      scrollerEl.scrollTop = scrollerEl.scrollHeight\n    }\n  },[messages])\n\n  return (\n    <div className={'conversation-detail'}>\n      <header className='header'>\n        <div className='left'>\n          <div className='friend-name'>{name}</div>\n        </div>\n        <div className='right'>\n          <div className='video-call'>\n            <KeyboardVoiceIcon fontSize={'medium'}/>\n          </div>\n          <div className='voice-call'>\n            <VideocamIcon fontSize={'medium'}/>\n          </div>\n        </div>\n      </header>\n      <main className='content'>\n        <div className='msg-scroller' ref={scrollerRef}>\n          <div className='no-more'>没有更多了</div>\n          {\n            messages.map(i=>(\n              <Message data={i} key={i.id}/>\n            ))\n          }\n          {/*<Message data={message2} />*/}\n          {/*<Message data={message2} />*/}\n          {/*<Message data={message2} />*/}\n          {/*<Message data={message2} />*/}\n          {/*<Message data={message2} />*/}\n          {/*<div className='no-more'>17:15</div>*/}\n          {/*<Message data={message2} />*/}\n        </div>\n      </main>\n      <div className='input-area'>\n        <TextBox onSubmit={handleSubmit}/>\n      </div>\n    </div>\n  )\n})\n\nexport default ConversationDetail\n\n\n","import React from 'react'\nimport classNames from 'classnames'\nimport { observer } from 'mobx-react-lite'\nimport {Button,Avatar,Divider} from 'antd'\nimport './index.scss'\nimport dayjs from 'dayjs'\n\n\nconst FriendDetail = function(props:{\n\n}){\n\n  return (\n    <div className={'contacts-detail'}>\n      <div className={'friend-detail'}>\n        <div className={'friend-detail-header'}>\n          <div className={'left'}>\n            <div className={'name'}>\n              <span >李云飞</span>\n            </div>\n            <div className={'description'}>这是一段描述</div>\n          </div>\n          <div className={'right'}>\n            <Avatar\n              src={'https://p3-passport.byteacctimg.com/img/user-avatar/8c81576e8b5fe3bb461ea2c8dd2e4f21~300x300.image'}\n              size={100}\n              shape={'square'}\n            />\n          </div>\n        </div>\n        <Divider/>\n        <div className={'friend-detail-main'}>\n\n        </div>\n        <Divider/>\n        <div className={'friend-detail-footer'}>\n          <Button type=\"primary\" size={'large'} style={{letterSpacing:'2px'}}>发消息</Button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst GroupDetail = function(props:{\n  data:any\n}){\n\n  const {data} = props\n  return (\n    <div className={'contacts-detail'}>\n      <div className={'group-detail'}>\n        <div className={'group-detail-header'}>\n          <div className={'left'}>\n            <div className={'name'}>\n              <span >{data.name}</span>\n            </div>\n            <div className={'description'}>{data.description}</div>\n          </div>\n          <div className={'right'}>\n            <Avatar\n              src={data.icon}\n              size={100}\n              shape={'square'}\n            />\n          </div>\n        </div>\n        <Divider/>\n        <div className={'group-detail-main'}>\n\n        </div>\n        <Divider/>\n        <div className={'group-detail-footer'}>\n          <Button type=\"primary\" size={'large'} style={{letterSpacing:'2px'}}>发消息</Button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default observer(function ContactsDetail(props:{\n  data:any\n}){\n  const {type} = props.data\n\n  if(type === 'friend'){\n    return <FriendDetail/>\n  }else if(type === 'group'){\n    return <GroupDetail data={props.data}/>\n  }else{\n    return <></>\n  }\n})\n\n","import React from 'react'\nimport './index.scss'\nimport { observer } from 'mobx-react-lite'\nimport IEmpty, { IEmptyType } from '../../i-empty'\nimport ConversationDetail from '../../conversation-detail'\nimport ContactDetail from '../../contact-detail'\nimport { NavTabItemName } from '../../../types/common.d'\n\ninterface Prop {\n  currentConversation?: any\n  currentTab: any\n  contact:any\n}\n\nfunction wrapper(el: React.ReactNode) {\n  return (\n    <section className='chat-layout-main-container'>\n      {el}\n    </section>\n  )\n}\n\nexport default observer(function({ currentConversation, currentTab,contact }: Prop) {\n  if (currentTab === NavTabItemName.CONVERSATIONS_LIST) {\n    if (!currentConversation) return wrapper(<IEmpty type={IEmptyType.NO_MSG}/>)\n    else {\n      return wrapper(<ConversationDetail detail={currentConversation} />)\n    }\n  } else if (currentTab === NavTabItemName.CONTACTS_LIST) {\n    if (!contact) return wrapper(<IEmpty type={IEmptyType.NO_MSG}/>)\n    else {\n      return (wrapper(<ContactDetail data={contact}/>))\n    }\n  } else {\n    return wrapper(<IEmpty type={IEmptyType.NO_DATA}/>)\n  }\n})\n","import React, { useState } from 'react'\nimport Grid from '@mui/material/Grid'\nimport {\n  ChatNavigation,\n  ChatSidebar,\n  ChatMain,\n} from '../../components/chat-layout'\nimport { NavTabItemName } from '../../types/common.d'\n\nimport './index.scss'\n\nexport default function Chat() {\n  const [currentTab, setCurrentTab] = useState<NavTabItemName>(NavTabItemName.CONVERSATIONS_LIST)\n  const [currentConversation, setCurrentConversation] = useState<any>()\n  const [contact, setContact] = useState<any>()\n\n  function onTabChange(tabId: NavTabItemName) {\n    setCurrentTab(tabId)\n  }\n\n  function onConversationChange(conversation: any) {\n    setCurrentConversation(conversation)\n    console.log('#11', conversation)\n  }\n\n  function onContactChange(contact:any){\n\n    setContact(contact)\n    console.log(\"联系人变更\",contact)\n  }\n\n  return (\n    <div id='chat-container'>\n      <div className='bg' />\n      <div className='layout'>\n        <Grid container height='100%' wrap={'nowrap'}>\n          <Grid item width={'80px'}>\n            <ChatNavigation\n              tabChange={onTabChange}\n            />\n          </Grid>\n          <Grid item xs={3}>\n            <ChatSidebar\n              currentTab={currentTab}\n              conversationChange={onConversationChange}\n              onContactChange={onContactChange}\n            />\n          </Grid>\n          <Grid item xs>\n            <ChatMain\n              currentConversation={currentConversation}\n              currentTab={currentTab}\n              contact={contact}\n            />\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  )\n}\n","import React, { useContext, useEffect, useState } from 'react'\nimport Input from '@mui/material/Input'\nimport InputLabel from '@mui/material/InputLabel'\nimport InputAdornment from '@mui/material/InputAdornment'\nimport FormControl from '@mui/material/FormControl'\nimport TextField from '@mui/material/TextField'\nimport AccountCircle from '@mui/icons-material/AccountCircle'\nimport Button from '@mui/material/Button'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Checkbox from '@mui/material/Checkbox'\nimport { GlobalContext } from '../../App'\nimport { observer } from 'mobx-react-lite'\nimport './index.scss'\nimport useStore from '../../hooks/useStore'\nimport authStore from '../../store/auth.store'\nimport {message} from 'antd'\n\n\nconst LoginForm = observer(function() {\n\n  const {appConfig} = useStore()\n  // console.log('##',appConfig)\n  const {isRememberAccount,rememberAccount} = appConfig\n  const [account, setAccount] = useState(rememberAccount)\n  // console.log(account)\n  const [password, setPassword] = useState('')\n  const [remember, setRemember] = useState(isRememberAccount)\n  // console.log(remember)\n  const {authStore} = useStore()\n\n  useEffect(function() {\n    setAccount(appConfig.rememberAccount)\n    setRemember(appConfig.isRememberAccount)\n  },[appConfig])\n\n  async function onLogin() {\n\n    localStorage.setItem('hertz_config',JSON.stringify({\n      ...appConfig,\n      rememberAccount:account,\n      isRememberAccount:remember\n    }))\n\n    authStore.signInAsync({\n      account,\n      password\n    })\n  }\n\n  return (\n    <div className='form-box'>\n      <TextField\n        label='账号'\n        margin='normal'\n        size='small'\n        value={account}\n        onChange={(e => setAccount(e.target.value))}\n        style={{\n          width: '320px', height: '40px',\n        }}\n      />\n      <TextField\n        label='密码'\n        margin='normal'\n        type='password'\n        size='small'\n        onChange={(e => setPassword(e.target.value))}\n        style={{\n          width: '320px', height: '40px',\n        }}\n      />\n      <div className='option'>\n        <FormControlLabel control={\n          <Checkbox\n            checked={remember}\n            onChange={(e)=>setRemember(e.target.checked)}/>\n        } label='记住账号' />\n      </div>\n      <Button\n        variant='contained'\n        style={{\n          width: '320px', height: '40px',\n        }}\n        onClick={onLogin}\n      >登录</Button>\n    </div>\n  )\n})\n\nconst RegisterForm = function() {\n\n  const [account, setAccount] = useState('')\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [repeatPassword, setRepeatPassword] = useState('')\n\n  async function onRegister() {\n    if(password !== repeatPassword){\n      message.error('两次输入的密码不一致！')\n      return\n    }\n    authStore.signUpAsync({\n      account,username,password\n    })\n  }\n\n  return (\n    <div className='form-box'>\n      <TextField\n        label='邮箱'\n        margin='normal'\n        size='small'\n        style={{\n          width: '320px', height: '40px',\n        }}\n        onChange={(e => setAccount(e.target.value))}\n      />\n      <TextField\n        label='用户名'\n        margin='normal'\n        size='small'\n        style={{\n          width: '320px', height: '40px',\n        }}\n        onChange={(e => setUsername(e.target.value))}\n      />\n      <TextField\n        type='password'\n        label='密码'\n        margin='normal'\n        size='small'\n        style={{\n          width: '320px', height: '40px',\n        }}\n        onChange={(e => setPassword(e.target.value))}\n      />\n      <TextField\n        type='password'\n        label='重复密码'\n        margin='normal'\n        size='small'\n        style={{\n          width: '320px', height: '40px',\n        }}\n        onChange={(e => setRepeatPassword(e.target.value))}\n      />\n      <Button\n        variant='contained'\n        style={{\n          width: '320px', height: '40px',\n        }}\n        onClick={onRegister}\n      >注册</Button>\n    </div>\n  )\n}\n\nconst ForgetPasswordForm = function() {\n  return (\n    <div></div>\n  )\n}\n\n\nexport default function Entrance(props: any) {\n\n  const [mode, setMode] = useState('signin')\n\n  const globalContext = useContext(GlobalContext)\n\n  const tips: any = {\n    'signin': '没有账号？注册',\n    'signup': '已有账号？登录',\n    'forget_password': '返回登录',\n  }\n\n  const forms: any = {\n    'signin': <LoginForm/>,\n    'signup': <RegisterForm/>,\n    'forget_password': <ForgetPasswordForm/>,\n  }\n\n  function toggleMode() {\n    if (mode === 'signin') setMode('signup')\n    else if (mode === 'signup') setMode('signin')\n    else if (mode === 'change_password') setMode('signin')\n  }\n\n  return (\n    <>\n      <div className='bg'></div>\n      <div className='entrance-container'>\n        <div className='form-wrapper'>\n          <div className='top-row'>\n            <div />\n            <div />\n            <div />\n          </div>\n          <div className='logo'>\n            <img src='https://web.sdk.qcloud.com/im/demo/latest/img/logo.dc3be0d4.png' alt='logo' />\n          </div>\n          {\n            forms[mode]\n          }\n          <Button variant='text' onClick={() => toggleMode()}>{\n            tips[mode]\n          }</Button>\n        </div>\n      </div>\n    </>\n  )\n}\n","import React, { createContext, useEffect } from 'react'\nimport { observer } from 'mobx-react-lite'\nimport Chat from './views/Chat'\nimport Entrance from './views/Entrance'\nimport useStore from './hooks/useStore'\n\nexport const GlobalContext = createContext<any>({})\n\nfunction App() {\n  const { appInit, authStore, chatStore } = useStore()\n  const hasLogin = authStore.hasLogin\n  // const hasLogin = true\n\n\n  useEffect(() => {\n    appInit()\n    chatStore.socketInit()\n    if (authStore.token) {\n      authStore.checkTokenAsync()\n    }\n  }, [])\n\n\n  return (\n    hasLogin ? <Chat /> : <Entrance />\n  )\n}\n\nexport default observer(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport 'normalize.css'\nimport './styles/index.scss'\nimport 'antd/dist/antd.css'\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}